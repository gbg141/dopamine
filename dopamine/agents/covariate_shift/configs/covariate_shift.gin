# Hyperparameters follow the settings from Gelada et al. (2017)
import dopamine.agents.covariate_shift.covariate_shift_agent
import dopamine.discrete_domains.atari_lib
import dopamine.discrete_domains.run_experiment
import dopamine.replay_memory.cs_replay_buffer
import gin.tf.external_configurables

CovariateShiftAgent.num_atoms = 51
CovariateShiftAgent.vmax = 10.
CovariateShiftAgent.gamma = 0.99
CovariateShiftAgent.update_horizon = 1
CovariateShiftAgent.min_replay_history = 20000  # agent steps
CovariateShiftAgent.update_period = 4
CovariateShiftAgent.target_update_period = 8000  # agent steps
CovariateShiftAgent.epsilon_train = 1.0
CovariateShiftAgent.epsilon_eval = 0.1
CovariateShiftAgent.epsilon_decay_period = 250000  # agent steps
CovariateShiftAgent.replay_scheme = 'uniform'
CovariateShiftAgent.tf_device = '/cpu:*' #'/gpu:0', or '/cpu:*' for non-GPU version
CovariateShiftAgent.optimizer = @tf.train.AdamOptimizer()
CovariateShiftAgent.ratio_num_atoms=51
CovariateShiftAgent.ratio_cmin=0.
CovariateShiftAgent.ratio_cmax=100.
CovariateShiftAgent.ratio_discount_factor=0.99
CovariateShiftAgent.ratio_loss_weight=0.02

tf.train.AdamOptimizer.learning_rate = 0.00025
tf.train.AdamOptimizer.epsilon = 0.0003125

atari_lib.create_atari_environment.game_name = 'Seaquest'
# Sticky actions with probability 0.25, as suggested by (Machado et al., 2017).
atari_lib.create_atari_environment.sticky_actions = True
create_agent.agent_name = 'covariate_shift'
Runner.num_iterations = 200
Runner.training_steps = 250000  # agent steps
Runner.evaluation_steps = 125000  # agent steps
Runner.max_steps_per_episode = 27000  # agent steps

WrappedCSReplayBuffer.replay_capacity = 1000000
WrappedCSReplayBuffer.batch_size = 32
